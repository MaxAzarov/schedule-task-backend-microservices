{
  "name": "schedule-task-backend",
  "version": "0.0.1",
  "description": "Backend part of schedule-task (diploma)",
  "author": "Maksym Azarov <volodor05412@gmail.com>",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"apps/**/*.ts\" \"libs/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/apps/schedule-task/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./apps/schedule-task/test/jest-e2e.json",
    "prepare": "husky install",
    "check-ts-files": "bash ./scripts/check-ts-files.sh",
    "pretypeorm": "ts-node -r tsconfig-paths/register ./src/database/copy-typeorm-config.ts",
    "typeorm": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js",
    "seeds": "ts-node -r tsconfig-paths/register ./node_modules/typeorm-seeding/dist/cli.js",
    "migration:generate": "npm run typeorm -- migration:generate src/database/migrations/$npm_config_name -p -d src/database/typeorm-config-cli.ts",
    "migration:create": "cross-env npm run typeorm -- migration:create src/database/migrations/$npm_config_name",
    "migration:run": "npm run typeorm -- migration:run -d src/database/typeorm-config-cli.ts",
    "migration:revert": "npm run typeorm -- migration:revert -d src/database/typeorm-config-cli.ts",
    "schema:drop": "npm run typeorm -- schema:drop",
    "seed:config": "npm run seeds -- config",
    "seed:run": "npm run seeds -- seed",
    "typeorm1": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js -p -d src/database/typeorm-config-cli.ts",
    "typeorm1:migrate": "npm run typeorm migration:generate -- -n",
    "typeorm1:run": "npm run typeorm migration:run"
  },
  "dependencies": {
    "@nestjs/axios": "^3.0.1",
    "@nestjs/common": "^10.3.0",
    "@nestjs/config": "^3.1.1",
    "@nestjs/core": "^10.3.0",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/microservices": "^10.3.0",
    "@nestjs/passport": "^10.0.3",
    "@nestjs/platform-express": "^10.3.0",
    "@nestjs/platform-socket.io": "^10.3.0",
    "@nestjs/swagger": "^7.1.17",
    "@nestjs/typeorm": "^10.0.1",
    "@nestjs/websockets": "^10.3.0",
    "bcryptjs": "^2.4.3",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "joi": "^17.12.0",
    "nestjs-cls": "^3.6.0",
    "oauth": "^0.10.0",
    "passport-jwt": "^4.0.1",
    "pg": "^8.11.3",
    "reflect-metadata": "^0.2.1",
    "rxjs": "^7.2.0",
    "socket.io": "^4.7.3",
    "typeorm": "^0.3.19"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.2.1",
    "@nestjs/schematics": "^10.0.3",
    "@nestjs/testing": "^10.3.0",
    "@types/babel__core": "^7.20.5",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.11",
    "@types/node": "^20.10.6",
    "@types/oauth": "^0.9.4",
    "@types/supertest": "^6.0.2",
    "@typescript-eslint/eslint-plugin": "^6.18.0",
    "@typescript-eslint/parser": "^6.18.0",
    "cross-env": "^7.0.3",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-import-resolver-typescript": "^3.6.1",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-prettier": "^5.1.2",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "prettier": "^3.1.1",
    "source-map-support": "^0.5.20",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.1",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.3.3"
  },
  "husky": {
    "hooks": {
      "pre-commit": "echo [Husky] pre-commit"
    }
  },
  "engines": {
    "node": "18.19.0"
  },
  "jest": {
    "preset": "ts-jest",
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "moduleDirectories": [
      "node_modules",
      "<rootDir>"
    ],
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/apps/",
      "<rootDir>/libs/"
    ],
    "moduleNameMapper": {
      "^@app/common(|/.*)$": "<rootDir>/libs/common/src/$1"
    }
  }
}
