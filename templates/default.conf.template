upstream auth {
    server auth:${AUTH_HTTP_PORT};
}

upstream schedule {
    server schedule:${PORT};
}

upstream jira {
    server jira:${JIRA_HTTP_PORT};
}

upstream trello {
    server trello:${TRELLO_HTTP_PORT};
}

upstream users {
    server users:${USERS_HTTP_PORT};
}

server {
    listen ${NGINX_PORT};

    location /integrations/ {
        # Match any request that starts with /integrations/ followed by an ID
        # The ID will be captured and available as $1 in the proxy_pass directive
        rewrite ^/events/(.*)$ /$1 break;

        proxy_set_header Host $host;
        proxy_pass http://schedule;

        # CORS headers for /schedule
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, OPTIONS';
            add_header 'Access-Control-Allow-Headers' '*';
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            return 200;
        }

        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, OPTIONS';
        add_header 'Access-Control-Allow-Headers' '*';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
    }

    location /events/ {
        # Match any request that starts with /events/ followed by an ID
        # The ID will be captured and available as $1 in the proxy_pass directive
        rewrite ^/events/(.*)$ /$1 break;

        proxy_set_header Host $host;
        proxy_pass http://schedule;

        # CORS headers for /schedule
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, OPTIONS';
            add_header 'Access-Control-Allow-Headers' '*';
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            return 200;
        }

        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, OPTIONS';
        add_header 'Access-Control-Allow-Headers' '*';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
    }

    location /auth {
        proxy_set_header Host $host;
        proxy_pass http://auth;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, OPTIONS';
            add_header 'Access-Control-Allow-Headers' '*';
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            return 200;
        }

        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, OPTIONS';
        add_header 'Access-Control-Allow-Headers' '*';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
    }

    location /jira {
        proxy_set_header Host $host;
        proxy_pass http://jira;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, OPTIONS';
            add_header 'Access-Control-Allow-Headers' '*';
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            return 200;
        }

        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, OPTIONS';
        add_header 'Access-Control-Allow-Headers' '*';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
    }

    location /trello {
        proxy_set_header Host $host;
        proxy_pass http://trello;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, OPTIONS';
            add_header 'Access-Control-Allow-Headers' '*';
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            return 200;
        }

        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, OPTIONS';
        add_header 'Access-Control-Allow-Headers' '*';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
    }

    location /users {
        proxy_set_header Host $host;
        proxy_pass http://users;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, OPTIONS';
            add_header 'Access-Control-Allow-Headers' '*';
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            return 200;
        }

        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, OPTIONS';
        add_header 'Access-Control-Allow-Headers' '*';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
    }
}